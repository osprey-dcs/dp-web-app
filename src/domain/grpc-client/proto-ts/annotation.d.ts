// @generated by protobuf-ts 2.9.3 with parameter output_javascript_es2020
// @generated from protobuf file "annotation.proto" (package "dp.service.annotation", syntax proto3)
// tslint:disable
//
//
// annotation.proto
//
// Contains RPC messages and interface specific to the Annotation Service.
//
// since: February, 2024
// version: 1.3.0
//
//
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { ExceptionalResult } from "./common";
import { Timestamp } from "./common";
/**
 *
 * Create DataSet Request.
 *
 * Contains a DataSet object to be created by the handler.
 *
 * @generated from protobuf message dp.service.annotation.CreateDataSetRequest
 */
export interface CreateDataSetRequest {
    /**
     * @generated from protobuf field: dp.service.annotation.DataSet dataSet = 1;
     */
    dataSet?: DataSet;
}
/**
 *
 * Create DataSet Request.
 *
 * Contains response to createDataSet() API request.  Message payload is exceptionalResult if request is rejected or an
 * error is encountered by the handler, otherwise contains a CreateDataSetResult.
 *
 * @generated from protobuf message dp.service.annotation.CreateDataSetResponse
 */
export interface CreateDataSetResponse {
    /**
     * @generated from protobuf field: Timestamp responseTime = 1;
     */
    responseTime?: Timestamp;
    /**
     * @generated from protobuf oneof: result
     */
    result: {
        oneofKind: "exceptionalResult";
        /**
         * @generated from protobuf field: ExceptionalResult exceptionalResult = 10;
         */
        exceptionalResult: ExceptionalResult;
    } | {
        oneofKind: "createDataSetResult";
        /**
         * @generated from protobuf field: dp.service.annotation.CreateDataSetResponse.CreateDataSetResult createDataSetResult = 11;
         */
        createDataSetResult: CreateDataSetResponse_CreateDataSetResult;
    } | {
        oneofKind: undefined;
    };
}
/**
 *
 * Successful Result.
 *
 * Contains the results of a successful request to create a DataSet.
 *
 * @generated from protobuf message dp.service.annotation.CreateDataSetResponse.CreateDataSetResult
 */
export interface CreateDataSetResponse_CreateDataSetResult {
    /**
     * @generated from protobuf field: string dataSetId = 1;
     */
    dataSetId: string;
}
/**
 *
 * Query DataSet Request.
 *
 * TODO: document behavior
 *
 * @generated from protobuf message dp.service.annotation.QueryDataSetsRequest
 */
export interface QueryDataSetsRequest {
    /**
     * @generated from protobuf field: repeated dp.service.annotation.QueryDataSetsRequest.QueryDataSetsCriterion criteria = 1;
     */
    criteria: QueryDataSetsRequest_QueryDataSetsCriterion[];
}
/**
 * @generated from protobuf message dp.service.annotation.QueryDataSetsRequest.QueryDataSetsCriterion
 */
export interface QueryDataSetsRequest_QueryDataSetsCriterion {
    /**
     * @generated from protobuf oneof: criterion
     */
    criterion: {
        oneofKind: "ownerCriterion";
        /**
         * @generated from protobuf field: dp.service.annotation.QueryDataSetsRequest.QueryDataSetsCriterion.OwnerCriterion ownerCriterion = 10;
         */
        ownerCriterion: QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion;
    } | {
        oneofKind: "descriptionCriterion";
        /**
         * @generated from protobuf field: dp.service.annotation.QueryDataSetsRequest.QueryDataSetsCriterion.DescriptionCriterion descriptionCriterion = 11;
         */
        descriptionCriterion: QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion;
    } | {
        oneofKind: undefined;
    };
}
/**
 *
 * Criterion used to search dataset ownerId field.  "And" operator is used to combine with other criteria.
 *
 * @generated from protobuf message dp.service.annotation.QueryDataSetsRequest.QueryDataSetsCriterion.OwnerCriterion
 */
export interface QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion {
    /**
     * @generated from protobuf field: string ownerId = 1;
     */
    ownerId: string;
}
/**
 *
 * Criterion used to search dataset description field.  "Or" operator is used to combine with other criteria.
 *
 * @generated from protobuf message dp.service.annotation.QueryDataSetsRequest.QueryDataSetsCriterion.DescriptionCriterion
 */
export interface QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion {
    /**
     * @generated from protobuf field: string descriptionText = 1;
     */
    descriptionText: string;
}
/**
 *
 * Query DataSet Request.
 *
 * TODO: document behavior
 *
 * @generated from protobuf message dp.service.annotation.QueryDataSetsResponse
 */
export interface QueryDataSetsResponse {
    /**
     * @generated from protobuf field: Timestamp responseTime = 1;
     */
    responseTime?: Timestamp;
    /**
     * @generated from protobuf oneof: result
     */
    result: {
        oneofKind: "exceptionalResult";
        /**
         * @generated from protobuf field: ExceptionalResult exceptionalResult = 10;
         */
        exceptionalResult: ExceptionalResult;
    } | {
        oneofKind: "dataSetsResult";
        /**
         * @generated from protobuf field: dp.service.annotation.QueryDataSetsResponse.DataSetsResult dataSetsResult = 11;
         */
        dataSetsResult: QueryDataSetsResponse_DataSetsResult;
    } | {
        oneofKind: undefined;
    };
}
/**
 *
 * Datasets Query Result Content.
 *
 * Result contains a list of DataSet messages matching the query parameters.
 *
 * @generated from protobuf message dp.service.annotation.QueryDataSetsResponse.DataSetsResult
 */
export interface QueryDataSetsResponse_DataSetsResult {
    /**
     * @generated from protobuf field: repeated dp.service.annotation.DataSet dataSets = 1;
     */
    dataSets: DataSet[];
}
/**
 *
 * Create Annotation Request.
 *
 * Contains details for adding an annotation to a DataSet with fields common to all requests for creating annotations,
 * plus details specific to each type of annotation that is supported (via annotation oneof field).
 *
 * @generated from protobuf message dp.service.annotation.CreateAnnotationRequest
 */
export interface CreateAnnotationRequest {
    /**
     * @generated from protobuf field: string ownerId = 1;
     */
    ownerId: string;
    /**
     * @generated from protobuf field: string dataSetId = 2;
     */
    dataSetId: string;
    /**
     * @generated from protobuf oneof: annotation
     */
    annotation: {
        oneofKind: "commentAnnotation";
        /**
         * @generated from protobuf field: dp.service.annotation.CommentAnnotation commentAnnotation = 10;
         */
        commentAnnotation: CommentAnnotation;
    } | {
        oneofKind: undefined;
    };
}
/**
 *
 * Create Annotation Response.
 *
 * Contains details for response to request to add an annotation to a DataSet.  Response includes either
 * an ExceptionalResult describing a rejection or error situation, or a CreateAnnotationResult indicating the request
 * was handled successfully.
 *
 * @generated from protobuf message dp.service.annotation.CreateAnnotationResponse
 */
export interface CreateAnnotationResponse {
    /**
     * @generated from protobuf field: Timestamp responseTime = 1;
     */
    responseTime?: Timestamp;
    /**
     * @generated from protobuf oneof: result
     */
    result: {
        oneofKind: "exceptionalResult";
        /**
         * @generated from protobuf field: ExceptionalResult exceptionalResult = 10;
         */
        exceptionalResult: ExceptionalResult;
    } | {
        oneofKind: "createAnnotationResult";
        /**
         * @generated from protobuf field: dp.service.annotation.CreateAnnotationResponse.CreateAnnotationResult createAnnotationResult = 11;
         */
        createAnnotationResult: CreateAnnotationResponse_CreateAnnotationResult;
    } | {
        oneofKind: undefined;
    };
}
/**
 *
 * Successful Annotation Result.
 *
 * Contains the results of a successful request to add an annotation to a DataSet.
 *
 * @generated from protobuf message dp.service.annotation.CreateAnnotationResponse.CreateAnnotationResult
 */
export interface CreateAnnotationResponse_CreateAnnotationResult {
    /**
     * @generated from protobuf field: string annotationId = 1;
     */
    annotationId: string;
}
/**
 *
 * Annotations Query Request.
 *
 * Contains a list of criteria for querying annotations.  Each criterion option is described in more detail below.
 *
 * @generated from protobuf message dp.service.annotation.QueryAnnotationsRequest
 */
export interface QueryAnnotationsRequest {
    /**
     * @generated from protobuf field: repeated dp.service.annotation.QueryAnnotationsRequest.QueryAnnotationsCriterion criteria = 1;
     */
    criteria: QueryAnnotationsRequest_QueryAnnotationsCriterion[];
}
/**
 * @generated from protobuf message dp.service.annotation.QueryAnnotationsRequest.QueryAnnotationsCriterion
 */
export interface QueryAnnotationsRequest_QueryAnnotationsCriterion {
    /**
     * @generated from protobuf oneof: criterion
     */
    criterion: {
        oneofKind: "ownerCriterion";
        /**
         * @generated from protobuf field: dp.service.annotation.QueryAnnotationsRequest.QueryAnnotationsCriterion.OwnerCriterion ownerCriterion = 10;
         */
        ownerCriterion: QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion;
    } | {
        oneofKind: "commentCriterion";
        /**
         * @generated from protobuf field: dp.service.annotation.QueryAnnotationsRequest.QueryAnnotationsCriterion.CommentCriterion commentCriterion = 11;
         */
        commentCriterion: QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion;
    } | {
        oneofKind: undefined;
    };
}
/**
 *
 * Criterion used to search ownerId field of Annotations.  "And" operator is used to combine with other criteria.
 *
 * @generated from protobuf message dp.service.annotation.QueryAnnotationsRequest.QueryAnnotationsCriterion.OwnerCriterion
 */
export interface QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion {
    /**
     * @generated from protobuf field: string ownerId = 1;
     */
    ownerId: string;
}
/**
 *
 * Criterion used to search over Comment Annotations.  "Or" operator is used to combine with other criteria.
 *
 * @generated from protobuf message dp.service.annotation.QueryAnnotationsRequest.QueryAnnotationsCriterion.CommentCriterion
 */
export interface QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion {
    /**
     * @generated from protobuf field: string commentText = 1;
     */
    commentText: string;
}
/**
 *
 * Annotations Query Response.
 *
 * Contains results from queryAnnotations() API request.  Message payload is either ExceptionalResult indicating
 * rejection, an error handling the request, or an empty query result, otherwise contains an AnnotationsResult with
 * the query results.
 *
 * @generated from protobuf message dp.service.annotation.QueryAnnotationsResponse
 */
export interface QueryAnnotationsResponse {
    /**
     * @generated from protobuf field: Timestamp responseTime = 1;
     */
    responseTime?: Timestamp;
    /**
     * @generated from protobuf oneof: result
     */
    result: {
        oneofKind: "exceptionalResult";
        /**
         * @generated from protobuf field: ExceptionalResult exceptionalResult = 10;
         */
        exceptionalResult: ExceptionalResult;
    } | {
        oneofKind: "annotationsResult";
        /**
         * @generated from protobuf field: dp.service.annotation.QueryAnnotationsResponse.AnnotationsResult annotationsResult = 11;
         */
        annotationsResult: QueryAnnotationsResponse_AnnotationsResult;
    } | {
        oneofKind: undefined;
    };
}
/**
 *
 * Annotations Query Result Content.
 *
 * Result contains a list of Annotation messages, one for each annotation matching the query parameters.
 *
 * @generated from protobuf message dp.service.annotation.QueryAnnotationsResponse.AnnotationsResult
 */
export interface QueryAnnotationsResponse_AnnotationsResult {
    /**
     * @generated from protobuf field: repeated dp.service.annotation.QueryAnnotationsResponse.AnnotationsResult.Annotation annotations = 1;
     */
    annotations: QueryAnnotationsResponse_AnnotationsResult_Annotation[];
}
/**
 * @generated from protobuf message dp.service.annotation.QueryAnnotationsResponse.AnnotationsResult.Annotation
 */
export interface QueryAnnotationsResponse_AnnotationsResult_Annotation {
    /**
     * @generated from protobuf field: string annotationId = 1;
     */
    annotationId: string;
    /**
     * @generated from protobuf field: string ownerId = 2;
     */
    ownerId: string;
    /**
     * @generated from protobuf field: string dataSetId = 3;
     */
    dataSetId: string;
    /**
     * @generated from protobuf field: dp.service.annotation.DataSet dataSet = 4;
     */
    dataSet?: DataSet;
    /**
     * @generated from protobuf oneof: annotation
     */
    annotation: {
        oneofKind: "commentAnnotation";
        /**
         * @generated from protobuf field: dp.service.annotation.CommentAnnotation commentAnnotation = 10;
         */
        commentAnnotation: CommentAnnotation;
    } | {
        oneofKind: undefined;
    };
}
/**
 *
 * Mechanism for identifying a set of data within the archive.  This will be used to support other features
 * such as adding annotations to data sets or exporting data sets.
 *
 * A DataSet specifies archived data across multiple DataBlocks.  Each DataBlock specifies a time range and list of
 * data sources (columns/PVs).
 *
 *
 * @generated from protobuf message dp.service.annotation.DataSet
 */
export interface DataSet {
    /**
     * @generated from protobuf field: string dataSetId = 1;
     */
    dataSetId: string;
    /**
     * @generated from protobuf field: string ownerId = 2;
     */
    ownerId: string;
    /**
     * @generated from protobuf field: string description = 3;
     */
    description: string;
    /**
     * @generated from protobuf field: repeated dp.service.annotation.DataBlock dataBlocks = 4;
     */
    dataBlocks: DataBlock[];
}
/**
 * @generated from protobuf message dp.service.annotation.DataBlock
 */
export interface DataBlock {
    /**
     * @generated from protobuf field: Timestamp beginTime = 1;
     */
    beginTime?: Timestamp;
    /**
     * @generated from protobuf field: Timestamp endTime = 2;
     */
    endTime?: Timestamp;
    /**
     * @generated from protobuf field: repeated string pvNames = 3;
     */
    pvNames: string[];
}
/**
 * @generated from protobuf message dp.service.annotation.CommentAnnotation
 */
export interface CommentAnnotation {
    /**
     * @generated from protobuf field: string comment = 1;
     */
    comment: string;
}
declare class CreateDataSetRequest$Type extends MessageType<CreateDataSetRequest> {
    constructor();
    create(value?: PartialMessage<CreateDataSetRequest>): CreateDataSetRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CreateDataSetRequest): CreateDataSetRequest;
    internalBinaryWrite(message: CreateDataSetRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message dp.service.annotation.CreateDataSetRequest
 */
export declare const CreateDataSetRequest: CreateDataSetRequest$Type;
declare class CreateDataSetResponse$Type extends MessageType<CreateDataSetResponse> {
    constructor();
    create(value?: PartialMessage<CreateDataSetResponse>): CreateDataSetResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CreateDataSetResponse): CreateDataSetResponse;
    internalBinaryWrite(message: CreateDataSetResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message dp.service.annotation.CreateDataSetResponse
 */
export declare const CreateDataSetResponse: CreateDataSetResponse$Type;
declare class CreateDataSetResponse_CreateDataSetResult$Type extends MessageType<CreateDataSetResponse_CreateDataSetResult> {
    constructor();
    create(value?: PartialMessage<CreateDataSetResponse_CreateDataSetResult>): CreateDataSetResponse_CreateDataSetResult;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CreateDataSetResponse_CreateDataSetResult): CreateDataSetResponse_CreateDataSetResult;
    internalBinaryWrite(message: CreateDataSetResponse_CreateDataSetResult, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message dp.service.annotation.CreateDataSetResponse.CreateDataSetResult
 */
export declare const CreateDataSetResponse_CreateDataSetResult: CreateDataSetResponse_CreateDataSetResult$Type;
declare class QueryDataSetsRequest$Type extends MessageType<QueryDataSetsRequest> {
    constructor();
    create(value?: PartialMessage<QueryDataSetsRequest>): QueryDataSetsRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryDataSetsRequest): QueryDataSetsRequest;
    internalBinaryWrite(message: QueryDataSetsRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message dp.service.annotation.QueryDataSetsRequest
 */
export declare const QueryDataSetsRequest: QueryDataSetsRequest$Type;
declare class QueryDataSetsRequest_QueryDataSetsCriterion$Type extends MessageType<QueryDataSetsRequest_QueryDataSetsCriterion> {
    constructor();
    create(value?: PartialMessage<QueryDataSetsRequest_QueryDataSetsCriterion>): QueryDataSetsRequest_QueryDataSetsCriterion;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryDataSetsRequest_QueryDataSetsCriterion): QueryDataSetsRequest_QueryDataSetsCriterion;
    internalBinaryWrite(message: QueryDataSetsRequest_QueryDataSetsCriterion, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message dp.service.annotation.QueryDataSetsRequest.QueryDataSetsCriterion
 */
export declare const QueryDataSetsRequest_QueryDataSetsCriterion: QueryDataSetsRequest_QueryDataSetsCriterion$Type;
declare class QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion$Type extends MessageType<QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion> {
    constructor();
    create(value?: PartialMessage<QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion>): QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion): QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion;
    internalBinaryWrite(message: QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message dp.service.annotation.QueryDataSetsRequest.QueryDataSetsCriterion.OwnerCriterion
 */
export declare const QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion: QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion$Type;
declare class QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion$Type extends MessageType<QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion> {
    constructor();
    create(value?: PartialMessage<QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion>): QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion): QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion;
    internalBinaryWrite(message: QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message dp.service.annotation.QueryDataSetsRequest.QueryDataSetsCriterion.DescriptionCriterion
 */
export declare const QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion: QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion$Type;
declare class QueryDataSetsResponse$Type extends MessageType<QueryDataSetsResponse> {
    constructor();
    create(value?: PartialMessage<QueryDataSetsResponse>): QueryDataSetsResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryDataSetsResponse): QueryDataSetsResponse;
    internalBinaryWrite(message: QueryDataSetsResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message dp.service.annotation.QueryDataSetsResponse
 */
export declare const QueryDataSetsResponse: QueryDataSetsResponse$Type;
declare class QueryDataSetsResponse_DataSetsResult$Type extends MessageType<QueryDataSetsResponse_DataSetsResult> {
    constructor();
    create(value?: PartialMessage<QueryDataSetsResponse_DataSetsResult>): QueryDataSetsResponse_DataSetsResult;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryDataSetsResponse_DataSetsResult): QueryDataSetsResponse_DataSetsResult;
    internalBinaryWrite(message: QueryDataSetsResponse_DataSetsResult, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message dp.service.annotation.QueryDataSetsResponse.DataSetsResult
 */
export declare const QueryDataSetsResponse_DataSetsResult: QueryDataSetsResponse_DataSetsResult$Type;
declare class CreateAnnotationRequest$Type extends MessageType<CreateAnnotationRequest> {
    constructor();
    create(value?: PartialMessage<CreateAnnotationRequest>): CreateAnnotationRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CreateAnnotationRequest): CreateAnnotationRequest;
    internalBinaryWrite(message: CreateAnnotationRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message dp.service.annotation.CreateAnnotationRequest
 */
export declare const CreateAnnotationRequest: CreateAnnotationRequest$Type;
declare class CreateAnnotationResponse$Type extends MessageType<CreateAnnotationResponse> {
    constructor();
    create(value?: PartialMessage<CreateAnnotationResponse>): CreateAnnotationResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CreateAnnotationResponse): CreateAnnotationResponse;
    internalBinaryWrite(message: CreateAnnotationResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message dp.service.annotation.CreateAnnotationResponse
 */
export declare const CreateAnnotationResponse: CreateAnnotationResponse$Type;
declare class CreateAnnotationResponse_CreateAnnotationResult$Type extends MessageType<CreateAnnotationResponse_CreateAnnotationResult> {
    constructor();
    create(value?: PartialMessage<CreateAnnotationResponse_CreateAnnotationResult>): CreateAnnotationResponse_CreateAnnotationResult;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CreateAnnotationResponse_CreateAnnotationResult): CreateAnnotationResponse_CreateAnnotationResult;
    internalBinaryWrite(message: CreateAnnotationResponse_CreateAnnotationResult, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message dp.service.annotation.CreateAnnotationResponse.CreateAnnotationResult
 */
export declare const CreateAnnotationResponse_CreateAnnotationResult: CreateAnnotationResponse_CreateAnnotationResult$Type;
declare class QueryAnnotationsRequest$Type extends MessageType<QueryAnnotationsRequest> {
    constructor();
    create(value?: PartialMessage<QueryAnnotationsRequest>): QueryAnnotationsRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryAnnotationsRequest): QueryAnnotationsRequest;
    internalBinaryWrite(message: QueryAnnotationsRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message dp.service.annotation.QueryAnnotationsRequest
 */
export declare const QueryAnnotationsRequest: QueryAnnotationsRequest$Type;
declare class QueryAnnotationsRequest_QueryAnnotationsCriterion$Type extends MessageType<QueryAnnotationsRequest_QueryAnnotationsCriterion> {
    constructor();
    create(value?: PartialMessage<QueryAnnotationsRequest_QueryAnnotationsCriterion>): QueryAnnotationsRequest_QueryAnnotationsCriterion;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryAnnotationsRequest_QueryAnnotationsCriterion): QueryAnnotationsRequest_QueryAnnotationsCriterion;
    internalBinaryWrite(message: QueryAnnotationsRequest_QueryAnnotationsCriterion, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message dp.service.annotation.QueryAnnotationsRequest.QueryAnnotationsCriterion
 */
export declare const QueryAnnotationsRequest_QueryAnnotationsCriterion: QueryAnnotationsRequest_QueryAnnotationsCriterion$Type;
declare class QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion$Type extends MessageType<QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion> {
    constructor();
    create(value?: PartialMessage<QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion>): QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion): QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion;
    internalBinaryWrite(message: QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message dp.service.annotation.QueryAnnotationsRequest.QueryAnnotationsCriterion.OwnerCriterion
 */
export declare const QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion: QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion$Type;
declare class QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion$Type extends MessageType<QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion> {
    constructor();
    create(value?: PartialMessage<QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion>): QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion): QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion;
    internalBinaryWrite(message: QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message dp.service.annotation.QueryAnnotationsRequest.QueryAnnotationsCriterion.CommentCriterion
 */
export declare const QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion: QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion$Type;
declare class QueryAnnotationsResponse$Type extends MessageType<QueryAnnotationsResponse> {
    constructor();
    create(value?: PartialMessage<QueryAnnotationsResponse>): QueryAnnotationsResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryAnnotationsResponse): QueryAnnotationsResponse;
    internalBinaryWrite(message: QueryAnnotationsResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message dp.service.annotation.QueryAnnotationsResponse
 */
export declare const QueryAnnotationsResponse: QueryAnnotationsResponse$Type;
declare class QueryAnnotationsResponse_AnnotationsResult$Type extends MessageType<QueryAnnotationsResponse_AnnotationsResult> {
    constructor();
    create(value?: PartialMessage<QueryAnnotationsResponse_AnnotationsResult>): QueryAnnotationsResponse_AnnotationsResult;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryAnnotationsResponse_AnnotationsResult): QueryAnnotationsResponse_AnnotationsResult;
    internalBinaryWrite(message: QueryAnnotationsResponse_AnnotationsResult, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message dp.service.annotation.QueryAnnotationsResponse.AnnotationsResult
 */
export declare const QueryAnnotationsResponse_AnnotationsResult: QueryAnnotationsResponse_AnnotationsResult$Type;
declare class QueryAnnotationsResponse_AnnotationsResult_Annotation$Type extends MessageType<QueryAnnotationsResponse_AnnotationsResult_Annotation> {
    constructor();
    create(value?: PartialMessage<QueryAnnotationsResponse_AnnotationsResult_Annotation>): QueryAnnotationsResponse_AnnotationsResult_Annotation;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryAnnotationsResponse_AnnotationsResult_Annotation): QueryAnnotationsResponse_AnnotationsResult_Annotation;
    internalBinaryWrite(message: QueryAnnotationsResponse_AnnotationsResult_Annotation, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message dp.service.annotation.QueryAnnotationsResponse.AnnotationsResult.Annotation
 */
export declare const QueryAnnotationsResponse_AnnotationsResult_Annotation: QueryAnnotationsResponse_AnnotationsResult_Annotation$Type;
declare class DataSet$Type extends MessageType<DataSet> {
    constructor();
    create(value?: PartialMessage<DataSet>): DataSet;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: DataSet): DataSet;
    internalBinaryWrite(message: DataSet, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message dp.service.annotation.DataSet
 */
export declare const DataSet: DataSet$Type;
declare class DataBlock$Type extends MessageType<DataBlock> {
    constructor();
    create(value?: PartialMessage<DataBlock>): DataBlock;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: DataBlock): DataBlock;
    internalBinaryWrite(message: DataBlock, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message dp.service.annotation.DataBlock
 */
export declare const DataBlock: DataBlock$Type;
declare class CommentAnnotation$Type extends MessageType<CommentAnnotation> {
    constructor();
    create(value?: PartialMessage<CommentAnnotation>): CommentAnnotation;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CommentAnnotation): CommentAnnotation;
    internalBinaryWrite(message: CommentAnnotation, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message dp.service.annotation.CommentAnnotation
 */
export declare const CommentAnnotation: CommentAnnotation$Type;
/**
 * @generated ServiceType for protobuf service dp.service.annotation.DpAnnotationService
 */
export declare const DpAnnotationService: any;
export {};
