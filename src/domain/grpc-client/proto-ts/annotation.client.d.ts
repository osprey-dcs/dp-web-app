// @generated by protobuf-ts 2.9.3 with parameter output_javascript_es2020
// @generated from protobuf file "annotation.proto" (package "dp.service.annotation", syntax proto3)
// tslint:disable
//
//
// annotation.proto
//
// Contains RPC messages and interface specific to the Annotation Service.
//
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import type { QueryAnnotationsResponse } from "./annotation";
import type { QueryAnnotationsRequest } from "./annotation";
import type { CreateAnnotationResponse } from "./annotation";
import type { CreateAnnotationRequest } from "./annotation";
import type { QueryDataSetsResponse } from "./annotation";
import type { QueryDataSetsRequest } from "./annotation";
import type { CreateDataSetResponse } from "./annotation";
import type { CreateDataSetRequest } from "./annotation";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 *
 * Annotation Service Interface
 *
 * Interface for annotating archived data.
 *
 * @generated from protobuf service dp.service.annotation.DpAnnotationService
 */
export interface IDpAnnotationServiceClient {
    /**
     *
     * createDataSet: Create a DataSet.
     *
     * This RPC sends a request to the annotation service to create a DataSet with the specified parameters.
     * The annotation service performs validation, and for a valid request, attempts to create the DataSet.
     * The response may indicate rejection, an error in handling the request, or successful handling of the request.
     *
     * @generated from protobuf rpc: createDataSet(dp.service.annotation.CreateDataSetRequest) returns (dp.service.annotation.CreateDataSetResponse);
     */
    createDataSet(input: CreateDataSetRequest, options?: RpcOptions): UnaryCall<CreateDataSetRequest, CreateDataSetResponse>;
    /**
     *
     * queryDataSets: Unary (non-streaming) data sets query.
     *
     * This RPC returns information about DataSets matching the specified query parameters. Client sends a single
     * QueryDataSetsRequest and receives a single QueryDataSetsResponse. The response may indicate rejection,
     * error in handling, no data matching query, or otherwise contains the data matching the query specification.
     *
     * @generated from protobuf rpc: queryDataSets(dp.service.annotation.QueryDataSetsRequest) returns (dp.service.annotation.QueryDataSetsResponse);
     */
    queryDataSets(input: QueryDataSetsRequest, options?: RpcOptions): UnaryCall<QueryDataSetsRequest, QueryDataSetsResponse>;
    /**
     *
     * createAnnotation: Add annotation to a DataSet.
     *
     * This RPC sends a request to the annotation service to create an annotation with the specified parameters.
     * The annotation service performs validation, and for a valid request, attempts to create the annotation.
     * The response may indicate rejection, an error in handling the request, or successful handling of the request.
     *
     * @generated from protobuf rpc: createAnnotation(dp.service.annotation.CreateAnnotationRequest) returns (dp.service.annotation.CreateAnnotationResponse);
     */
    createAnnotation(input: CreateAnnotationRequest, options?: RpcOptions): UnaryCall<CreateAnnotationRequest, CreateAnnotationResponse>;
    /**
     *
     * queryAnnotations: Unary (non-streaming) annotations query.
     *
     * This RPC is used by clients to query over annotations added to ingested data.
     * Client sends a single QueryAnnotationsRequest with the query parameters, and receives a single
     * QueryAnnotationsResponse with the query results. The response may indicate rejection, error in handling,
     * no data matching query, or otherwise contains the data matching the query specification.
     *
     * @generated from protobuf rpc: queryAnnotations(dp.service.annotation.QueryAnnotationsRequest) returns (dp.service.annotation.QueryAnnotationsResponse);
     */
    queryAnnotations(input: QueryAnnotationsRequest, options?: RpcOptions): UnaryCall<QueryAnnotationsRequest, QueryAnnotationsResponse>;
}
/**
 *
 * Annotation Service Interface
 *
 * Interface for annotating archived data.
 *
 * @generated from protobuf service dp.service.annotation.DpAnnotationService
 */
export declare class DpAnnotationServiceClient implements IDpAnnotationServiceClient, ServiceInfo {
    private readonly _transport;
    typeName: any;
    methods: any;
    options: any;
    constructor(_transport: RpcTransport);
    /**
     *
     * createDataSet: Create a DataSet.
     *
     * This RPC sends a request to the annotation service to create a DataSet with the specified parameters.
     * The annotation service performs validation, and for a valid request, attempts to create the DataSet.
     * The response may indicate rejection, an error in handling the request, or successful handling of the request.
     *
     * @generated from protobuf rpc: createDataSet(dp.service.annotation.CreateDataSetRequest) returns (dp.service.annotation.CreateDataSetResponse);
     */
    createDataSet(input: CreateDataSetRequest, options?: RpcOptions): UnaryCall<CreateDataSetRequest, CreateDataSetResponse>;
    /**
     *
     * queryDataSets: Unary (non-streaming) data sets query.
     *
     * This RPC returns information about DataSets matching the specified query parameters. Client sends a single
     * QueryDataSetsRequest and receives a single QueryDataSetsResponse. The response may indicate rejection,
     * error in handling, no data matching query, or otherwise contains the data matching the query specification.
     *
     * @generated from protobuf rpc: queryDataSets(dp.service.annotation.QueryDataSetsRequest) returns (dp.service.annotation.QueryDataSetsResponse);
     */
    queryDataSets(input: QueryDataSetsRequest, options?: RpcOptions): UnaryCall<QueryDataSetsRequest, QueryDataSetsResponse>;
    /**
     *
     * createAnnotation: Add annotation to a DataSet.
     *
     * This RPC sends a request to the annotation service to create an annotation with the specified parameters.
     * The annotation service performs validation, and for a valid request, attempts to create the annotation.
     * The response may indicate rejection, an error in handling the request, or successful handling of the request.
     *
     * @generated from protobuf rpc: createAnnotation(dp.service.annotation.CreateAnnotationRequest) returns (dp.service.annotation.CreateAnnotationResponse);
     */
    createAnnotation(input: CreateAnnotationRequest, options?: RpcOptions): UnaryCall<CreateAnnotationRequest, CreateAnnotationResponse>;
    /**
     *
     * queryAnnotations: Unary (non-streaming) annotations query.
     *
     * This RPC is used by clients to query over annotations added to ingested data.
     * Client sends a single QueryAnnotationsRequest with the query parameters, and receives a single
     * QueryAnnotationsResponse with the query results. The response may indicate rejection, error in handling,
     * no data matching query, or otherwise contains the data matching the query specification.
     *
     * @generated from protobuf rpc: queryAnnotations(dp.service.annotation.QueryAnnotationsRequest) returns (dp.service.annotation.QueryAnnotationsResponse);
     */
    queryAnnotations(input: QueryAnnotationsRequest, options?: RpcOptions): UnaryCall<QueryAnnotationsRequest, QueryAnnotationsResponse>;
}
