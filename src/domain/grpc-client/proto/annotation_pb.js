// source: annotation.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var common_pb = require('./common_pb.js');
goog.object.extend(proto, common_pb);
goog.exportSymbol('proto.CreateAnnotationRequest', null, global);
goog.exportSymbol('proto.CreateAnnotationRequest.AnnotationtypedetailsCase', null, global);
goog.exportSymbol('proto.CreateAnnotationRequest.CommentDetails', null, global);
goog.exportSymbol('proto.CreateAnnotationResponse', null, global);
goog.exportSymbol('proto.CreateAnnotationResponse.CreateAnnotationResult', null, global);
goog.exportSymbol('proto.CreateAnnotationResponse.ResultCase', null, global);
goog.exportSymbol('proto.DataBlock', null, global);
goog.exportSymbol('proto.DataSet', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CreateAnnotationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.CreateAnnotationRequest.repeatedFields_, proto.CreateAnnotationRequest.oneofGroups_);
};
goog.inherits(proto.CreateAnnotationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.CreateAnnotationRequest.displayName = 'proto.CreateAnnotationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CreateAnnotationRequest.CommentDetails = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CreateAnnotationRequest.CommentDetails, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.CreateAnnotationRequest.CommentDetails.displayName = 'proto.CreateAnnotationRequest.CommentDetails';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CreateAnnotationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.CreateAnnotationResponse.oneofGroups_);
};
goog.inherits(proto.CreateAnnotationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.CreateAnnotationResponse.displayName = 'proto.CreateAnnotationResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CreateAnnotationResponse.CreateAnnotationResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CreateAnnotationResponse.CreateAnnotationResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.CreateAnnotationResponse.CreateAnnotationResult.displayName = 'proto.CreateAnnotationResponse.CreateAnnotationResult';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.DataSet = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.DataSet.repeatedFields_, null);
};
goog.inherits(proto.DataSet, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.DataSet.displayName = 'proto.DataSet';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.DataBlock = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.DataBlock.repeatedFields_, null);
};
goog.inherits(proto.DataBlock, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.DataBlock.displayName = 'proto.DataBlock';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.CreateAnnotationRequest.repeatedFields_ = [2,3];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.CreateAnnotationRequest.oneofGroups_ = [[10]];

/**
 * @enum {number}
 */
proto.CreateAnnotationRequest.AnnotationtypedetailsCase = {
  ANNOTATIONTYPEDETAILS_NOT_SET: 0,
  COMMENTDETAILS: 10
};

/**
 * @return {proto.CreateAnnotationRequest.AnnotationtypedetailsCase}
 */
proto.CreateAnnotationRequest.prototype.getAnnotationtypedetailsCase = function() {
  return /** @type {proto.CreateAnnotationRequest.AnnotationtypedetailsCase} */(jspb.Message.computeOneofCase(this, proto.CreateAnnotationRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CreateAnnotationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CreateAnnotationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CreateAnnotationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CreateAnnotationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    authorid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    tagsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    attributesList: jspb.Message.toObjectList(msg.getAttributesList(),
    common_pb.Attribute.toObject, includeInstance),
    dataset: (f = msg.getDataset()) && proto.DataSet.toObject(includeInstance, f),
    commentdetails: (f = msg.getCommentdetails()) && proto.CreateAnnotationRequest.CommentDetails.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CreateAnnotationRequest}
 */
proto.CreateAnnotationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CreateAnnotationRequest;
  return proto.CreateAnnotationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CreateAnnotationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CreateAnnotationRequest}
 */
proto.CreateAnnotationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAuthorid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addTags(value);
      break;
    case 3:
      var value = new common_pb.Attribute;
      reader.readMessage(value,common_pb.Attribute.deserializeBinaryFromReader);
      msg.addAttributes(value);
      break;
    case 4:
      var value = new proto.DataSet;
      reader.readMessage(value,proto.DataSet.deserializeBinaryFromReader);
      msg.setDataset(value);
      break;
    case 10:
      var value = new proto.CreateAnnotationRequest.CommentDetails;
      reader.readMessage(value,proto.CreateAnnotationRequest.CommentDetails.deserializeBinaryFromReader);
      msg.setCommentdetails(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CreateAnnotationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CreateAnnotationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CreateAnnotationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CreateAnnotationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuthorid();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getAttributesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      common_pb.Attribute.serializeBinaryToWriter
    );
  }
  f = message.getDataset();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.DataSet.serializeBinaryToWriter
    );
  }
  f = message.getCommentdetails();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.CreateAnnotationRequest.CommentDetails.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CreateAnnotationRequest.CommentDetails.prototype.toObject = function(opt_includeInstance) {
  return proto.CreateAnnotationRequest.CommentDetails.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CreateAnnotationRequest.CommentDetails} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CreateAnnotationRequest.CommentDetails.toObject = function(includeInstance, msg) {
  var f, obj = {
    comment: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CreateAnnotationRequest.CommentDetails}
 */
proto.CreateAnnotationRequest.CommentDetails.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CreateAnnotationRequest.CommentDetails;
  return proto.CreateAnnotationRequest.CommentDetails.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CreateAnnotationRequest.CommentDetails} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CreateAnnotationRequest.CommentDetails}
 */
proto.CreateAnnotationRequest.CommentDetails.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setComment(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CreateAnnotationRequest.CommentDetails.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CreateAnnotationRequest.CommentDetails.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CreateAnnotationRequest.CommentDetails} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CreateAnnotationRequest.CommentDetails.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getComment();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string comment = 1;
 * @return {string}
 */
proto.CreateAnnotationRequest.CommentDetails.prototype.getComment = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.CreateAnnotationRequest.CommentDetails} returns this
 */
proto.CreateAnnotationRequest.CommentDetails.prototype.setComment = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 authorId = 1;
 * @return {number}
 */
proto.CreateAnnotationRequest.prototype.getAuthorid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.CreateAnnotationRequest} returns this
 */
proto.CreateAnnotationRequest.prototype.setAuthorid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated string tags = 2;
 * @return {!Array<string>}
 */
proto.CreateAnnotationRequest.prototype.getTagsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.CreateAnnotationRequest} returns this
 */
proto.CreateAnnotationRequest.prototype.setTagsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.CreateAnnotationRequest} returns this
 */
proto.CreateAnnotationRequest.prototype.addTags = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.CreateAnnotationRequest} returns this
 */
proto.CreateAnnotationRequest.prototype.clearTagsList = function() {
  return this.setTagsList([]);
};


/**
 * repeated Attribute attributes = 3;
 * @return {!Array<!proto.Attribute>}
 */
proto.CreateAnnotationRequest.prototype.getAttributesList = function() {
  return /** @type{!Array<!proto.Attribute>} */ (
    jspb.Message.getRepeatedWrapperField(this, common_pb.Attribute, 3));
};


/**
 * @param {!Array<!proto.Attribute>} value
 * @return {!proto.CreateAnnotationRequest} returns this
*/
proto.CreateAnnotationRequest.prototype.setAttributesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.Attribute=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Attribute}
 */
proto.CreateAnnotationRequest.prototype.addAttributes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.Attribute, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.CreateAnnotationRequest} returns this
 */
proto.CreateAnnotationRequest.prototype.clearAttributesList = function() {
  return this.setAttributesList([]);
};


/**
 * optional DataSet dataSet = 4;
 * @return {?proto.DataSet}
 */
proto.CreateAnnotationRequest.prototype.getDataset = function() {
  return /** @type{?proto.DataSet} */ (
    jspb.Message.getWrapperField(this, proto.DataSet, 4));
};


/**
 * @param {?proto.DataSet|undefined} value
 * @return {!proto.CreateAnnotationRequest} returns this
*/
proto.CreateAnnotationRequest.prototype.setDataset = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.CreateAnnotationRequest} returns this
 */
proto.CreateAnnotationRequest.prototype.clearDataset = function() {
  return this.setDataset(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CreateAnnotationRequest.prototype.hasDataset = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional CommentDetails commentDetails = 10;
 * @return {?proto.CreateAnnotationRequest.CommentDetails}
 */
proto.CreateAnnotationRequest.prototype.getCommentdetails = function() {
  return /** @type{?proto.CreateAnnotationRequest.CommentDetails} */ (
    jspb.Message.getWrapperField(this, proto.CreateAnnotationRequest.CommentDetails, 10));
};


/**
 * @param {?proto.CreateAnnotationRequest.CommentDetails|undefined} value
 * @return {!proto.CreateAnnotationRequest} returns this
*/
proto.CreateAnnotationRequest.prototype.setCommentdetails = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.CreateAnnotationRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.CreateAnnotationRequest} returns this
 */
proto.CreateAnnotationRequest.prototype.clearCommentdetails = function() {
  return this.setCommentdetails(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CreateAnnotationRequest.prototype.hasCommentdetails = function() {
  return jspb.Message.getField(this, 10) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.CreateAnnotationResponse.oneofGroups_ = [[10,11]];

/**
 * @enum {number}
 */
proto.CreateAnnotationResponse.ResultCase = {
  RESULT_NOT_SET: 0,
  EXCEPTIONALRESULT: 10,
  CREATEANNOTATIONRESULT: 11
};

/**
 * @return {proto.CreateAnnotationResponse.ResultCase}
 */
proto.CreateAnnotationResponse.prototype.getResultCase = function() {
  return /** @type {proto.CreateAnnotationResponse.ResultCase} */(jspb.Message.computeOneofCase(this, proto.CreateAnnotationResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CreateAnnotationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.CreateAnnotationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CreateAnnotationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CreateAnnotationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    responsetime: (f = msg.getResponsetime()) && common_pb.Timestamp.toObject(includeInstance, f),
    exceptionalresult: (f = msg.getExceptionalresult()) && common_pb.ExceptionalResult.toObject(includeInstance, f),
    createannotationresult: (f = msg.getCreateannotationresult()) && proto.CreateAnnotationResponse.CreateAnnotationResult.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CreateAnnotationResponse}
 */
proto.CreateAnnotationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CreateAnnotationResponse;
  return proto.CreateAnnotationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CreateAnnotationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CreateAnnotationResponse}
 */
proto.CreateAnnotationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_pb.Timestamp;
      reader.readMessage(value,common_pb.Timestamp.deserializeBinaryFromReader);
      msg.setResponsetime(value);
      break;
    case 10:
      var value = new common_pb.ExceptionalResult;
      reader.readMessage(value,common_pb.ExceptionalResult.deserializeBinaryFromReader);
      msg.setExceptionalresult(value);
      break;
    case 11:
      var value = new proto.CreateAnnotationResponse.CreateAnnotationResult;
      reader.readMessage(value,proto.CreateAnnotationResponse.CreateAnnotationResult.deserializeBinaryFromReader);
      msg.setCreateannotationresult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CreateAnnotationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CreateAnnotationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CreateAnnotationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CreateAnnotationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResponsetime();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getExceptionalresult();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      common_pb.ExceptionalResult.serializeBinaryToWriter
    );
  }
  f = message.getCreateannotationresult();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.CreateAnnotationResponse.CreateAnnotationResult.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CreateAnnotationResponse.CreateAnnotationResult.prototype.toObject = function(opt_includeInstance) {
  return proto.CreateAnnotationResponse.CreateAnnotationResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CreateAnnotationResponse.CreateAnnotationResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CreateAnnotationResponse.CreateAnnotationResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    annotationid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CreateAnnotationResponse.CreateAnnotationResult}
 */
proto.CreateAnnotationResponse.CreateAnnotationResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CreateAnnotationResponse.CreateAnnotationResult;
  return proto.CreateAnnotationResponse.CreateAnnotationResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CreateAnnotationResponse.CreateAnnotationResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CreateAnnotationResponse.CreateAnnotationResult}
 */
proto.CreateAnnotationResponse.CreateAnnotationResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAnnotationid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CreateAnnotationResponse.CreateAnnotationResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CreateAnnotationResponse.CreateAnnotationResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CreateAnnotationResponse.CreateAnnotationResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CreateAnnotationResponse.CreateAnnotationResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAnnotationid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string annotationId = 1;
 * @return {string}
 */
proto.CreateAnnotationResponse.CreateAnnotationResult.prototype.getAnnotationid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.CreateAnnotationResponse.CreateAnnotationResult} returns this
 */
proto.CreateAnnotationResponse.CreateAnnotationResult.prototype.setAnnotationid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Timestamp responseTime = 1;
 * @return {?proto.Timestamp}
 */
proto.CreateAnnotationResponse.prototype.getResponsetime = function() {
  return /** @type{?proto.Timestamp} */ (
    jspb.Message.getWrapperField(this, common_pb.Timestamp, 1));
};


/**
 * @param {?proto.Timestamp|undefined} value
 * @return {!proto.CreateAnnotationResponse} returns this
*/
proto.CreateAnnotationResponse.prototype.setResponsetime = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.CreateAnnotationResponse} returns this
 */
proto.CreateAnnotationResponse.prototype.clearResponsetime = function() {
  return this.setResponsetime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CreateAnnotationResponse.prototype.hasResponsetime = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ExceptionalResult exceptionalResult = 10;
 * @return {?proto.ExceptionalResult}
 */
proto.CreateAnnotationResponse.prototype.getExceptionalresult = function() {
  return /** @type{?proto.ExceptionalResult} */ (
    jspb.Message.getWrapperField(this, common_pb.ExceptionalResult, 10));
};


/**
 * @param {?proto.ExceptionalResult|undefined} value
 * @return {!proto.CreateAnnotationResponse} returns this
*/
proto.CreateAnnotationResponse.prototype.setExceptionalresult = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.CreateAnnotationResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.CreateAnnotationResponse} returns this
 */
proto.CreateAnnotationResponse.prototype.clearExceptionalresult = function() {
  return this.setExceptionalresult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CreateAnnotationResponse.prototype.hasExceptionalresult = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional CreateAnnotationResult createAnnotationResult = 11;
 * @return {?proto.CreateAnnotationResponse.CreateAnnotationResult}
 */
proto.CreateAnnotationResponse.prototype.getCreateannotationresult = function() {
  return /** @type{?proto.CreateAnnotationResponse.CreateAnnotationResult} */ (
    jspb.Message.getWrapperField(this, proto.CreateAnnotationResponse.CreateAnnotationResult, 11));
};


/**
 * @param {?proto.CreateAnnotationResponse.CreateAnnotationResult|undefined} value
 * @return {!proto.CreateAnnotationResponse} returns this
*/
proto.CreateAnnotationResponse.prototype.setCreateannotationresult = function(value) {
  return jspb.Message.setOneofWrapperField(this, 11, proto.CreateAnnotationResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.CreateAnnotationResponse} returns this
 */
proto.CreateAnnotationResponse.prototype.clearCreateannotationresult = function() {
  return this.setCreateannotationresult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CreateAnnotationResponse.prototype.hasCreateannotationresult = function() {
  return jspb.Message.getField(this, 11) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.DataSet.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.DataSet.prototype.toObject = function(opt_includeInstance) {
  return proto.DataSet.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.DataSet} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DataSet.toObject = function(includeInstance, msg) {
  var f, obj = {
    datablocksList: jspb.Message.toObjectList(msg.getDatablocksList(),
    proto.DataBlock.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.DataSet}
 */
proto.DataSet.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.DataSet;
  return proto.DataSet.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.DataSet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.DataSet}
 */
proto.DataSet.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.DataBlock;
      reader.readMessage(value,proto.DataBlock.deserializeBinaryFromReader);
      msg.addDatablocks(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.DataSet.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.DataSet.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.DataSet} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DataSet.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDatablocksList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.DataBlock.serializeBinaryToWriter
    );
  }
};


/**
 * repeated DataBlock dataBlocks = 1;
 * @return {!Array<!proto.DataBlock>}
 */
proto.DataSet.prototype.getDatablocksList = function() {
  return /** @type{!Array<!proto.DataBlock>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.DataBlock, 1));
};


/**
 * @param {!Array<!proto.DataBlock>} value
 * @return {!proto.DataSet} returns this
*/
proto.DataSet.prototype.setDatablocksList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.DataBlock=} opt_value
 * @param {number=} opt_index
 * @return {!proto.DataBlock}
 */
proto.DataSet.prototype.addDatablocks = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.DataBlock, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.DataSet} returns this
 */
proto.DataSet.prototype.clearDatablocksList = function() {
  return this.setDatablocksList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.DataBlock.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.DataBlock.prototype.toObject = function(opt_includeInstance) {
  return proto.DataBlock.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.DataBlock} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DataBlock.toObject = function(includeInstance, msg) {
  var f, obj = {
    begintime: (f = msg.getBegintime()) && common_pb.Timestamp.toObject(includeInstance, f),
    endtime: (f = msg.getEndtime()) && common_pb.Timestamp.toObject(includeInstance, f),
    pvnamesList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.DataBlock}
 */
proto.DataBlock.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.DataBlock;
  return proto.DataBlock.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.DataBlock} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.DataBlock}
 */
proto.DataBlock.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_pb.Timestamp;
      reader.readMessage(value,common_pb.Timestamp.deserializeBinaryFromReader);
      msg.setBegintime(value);
      break;
    case 2:
      var value = new common_pb.Timestamp;
      reader.readMessage(value,common_pb.Timestamp.deserializeBinaryFromReader);
      msg.setEndtime(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addPvnames(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.DataBlock.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.DataBlock.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.DataBlock} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DataBlock.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBegintime();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getEndtime();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getPvnamesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * optional Timestamp beginTime = 1;
 * @return {?proto.Timestamp}
 */
proto.DataBlock.prototype.getBegintime = function() {
  return /** @type{?proto.Timestamp} */ (
    jspb.Message.getWrapperField(this, common_pb.Timestamp, 1));
};


/**
 * @param {?proto.Timestamp|undefined} value
 * @return {!proto.DataBlock} returns this
*/
proto.DataBlock.prototype.setBegintime = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.DataBlock} returns this
 */
proto.DataBlock.prototype.clearBegintime = function() {
  return this.setBegintime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.DataBlock.prototype.hasBegintime = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Timestamp endTime = 2;
 * @return {?proto.Timestamp}
 */
proto.DataBlock.prototype.getEndtime = function() {
  return /** @type{?proto.Timestamp} */ (
    jspb.Message.getWrapperField(this, common_pb.Timestamp, 2));
};


/**
 * @param {?proto.Timestamp|undefined} value
 * @return {!proto.DataBlock} returns this
*/
proto.DataBlock.prototype.setEndtime = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.DataBlock} returns this
 */
proto.DataBlock.prototype.clearEndtime = function() {
  return this.setEndtime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.DataBlock.prototype.hasEndtime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated string pvNames = 3;
 * @return {!Array<string>}
 */
proto.DataBlock.prototype.getPvnamesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.DataBlock} returns this
 */
proto.DataBlock.prototype.setPvnamesList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.DataBlock} returns this
 */
proto.DataBlock.prototype.addPvnames = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.DataBlock} returns this
 */
proto.DataBlock.prototype.clearPvnamesList = function() {
  return this.setPvnamesList([]);
};


goog.object.extend(exports, proto);
